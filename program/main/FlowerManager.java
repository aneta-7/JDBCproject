package main;

import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class FlowerManager {
	
	private Connection connection;
	
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	private String createTableFlower = "CREATE TABLE Flower(idFlower bigint GENERATED BY DEFAULT AS IDENTITY, flowerName varchar(30), flowerPrice varchar(30))";


	
	private PreparedStatement addFlowerStmt;
	private PreparedStatement deleteAllFlowerStmt;
	private PreparedStatement getAllFlowerStmt;
	private PreparedStatement updateFlowerStmt;
	
	private Statement statement;
	public FlowerManager(){
		try{
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();
			
			ResultSet rs = connection.getMetaData().getTables(null, null,null,null);
			
			boolean tableExists = false;
					while (rs.next()){
						if("Flower".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
							tableExists = true;
							break;
						}
						
					}
		
					if(!tableExists)
						statement.executeUpdate(createTableFlower);
					
					addFlowerStmt =  connection.prepareStatement("INSERT INTO Flower(flowerName, flowerPrice)VALUES(?,?)");
					deleteAllFlowerStmt = connection.prepareStatement("DELETE FROM Flower");
					getAllFlowerStmt = connection.prepareStatement("SELECT id, flowerName, flowerProce FROM Flowers");
					updateFlowerStmt = connection.prepareStatement("UPDATE");
		
		}
		catch(SQLException e){
			e.printStackTrace();
		}
	}
		Connection getConnection(){
			return connection;
		}
		void clearFlower(){
			try{
				deleteAllFlowerStmt.executeUpdate();
		}catch(SQLException e){
			e.printStackTrace();
		}
		}
		
		public int addFlower(Flower flower){
			int count = 0;
			try{
				addFlowerStmt.setString(1, flower.getFlowerName());
				addFlowerStmt.setString(2, flower.getFlowerPrice());
				
				count = addFlowerStmt.executeUpdate();
			}catch(SQLException e){
				e.printStackTrace();
			}
			return count;
		}
	
		public List<Flower> getAllFlower(){
			List<Flower> flower = new ArrayList<Flower>();
			
			try{
				ResultSet rs = getAllFlowerStmt.executeQuery();
				
				while(rs.next()){
					Flower f = new Flower();
					f.setIdFlower(rs.getInt("idFlower"));
					f.setFlowerName(rs.getString("flowerName"));
					f.setFlowerPrice(rs.getString("flowerPrice"));
					flower.add(f);
					
				}
			}
			catch(SQLException e){
				e.printStackTrace();
			}
			return flower;
		}
	
	
}
